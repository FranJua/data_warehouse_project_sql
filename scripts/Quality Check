-- Check for Nulls or Duplicates in Primary Key
--- Expectations: No Results

SELECT
sls_ord_num,
COUNT(*)
FROM bronze.crm_sales_details
GROUP BY sls_ord_num
HAVING COUNT(*) > 1 OR sls_ord_num IS NULL

--- Check for unwanted Spaces
--- Expectation: No Results

SELECT prd_nm
FROM silver.crm_prd_info
WHERE prd_nm !=TRIM(prd_nm)

--- Check for NULLS or Negative Numbers
--- Expectation: No Results

SELECT prd_cost
FROM bronze.crm_prd_info
WHERE prd_cost < 0 OR prd_cost IS NULL

--- Data Standardization & Consistency
SELECT DISTINCT prd_line
FROM bronze.crm_prd_info

--- Check for Invalid Date Orders
SELECT *
FROM silver.crm_sales_details
WHERE sls_order_dt > sls_ship_dt OR sls_order_dt > sls_due_dt

--- Check if all values are in the primary keys column (sls_prd_key and sls_cust_id), in order to be able to use
--- them to link the tables. "NOT IN" tell us if there  are some values that are not contained in both columns
--- in both tables.
SELECT
sls_ord_num,
sls_prd_key,
sls_cust_id,
sls_order_dt,
sls_ship_dt,
sls_due_dt,
sls_sales,
sls_quantity,
sls_price
FROM bronze.crm_sales_details
WHERE sls_prd_key NOT IN (SELECT prd_key FROM silver.crm_prd_info)

--- Check Data Consistency between Sales, Quantity and Price
--- >> Sales = Quantity * Price
--- >> Values must not be NULL, zero, or negative

SELECT DISTINCT
sls_sales AS old_sls_sales,
sls_quantity,
sls_price AS old_sls_price,

	CASE WHEN sls_sales IS NULL OR sls_sales <=0 OR sls_sales != sls_quantity * ABS(sls_price)
	THEN sls_quantity * ABS(sls_price)
	ELSE sls_sales
	END AS sls_sales,

	CASE WHEN sls_price IS NULL OR sls_price <= 0
	THEN sls_sales / NULLIF(sls_quantity,0)
	ELSE sls_price
END AS sls_price
FROM silver.crm_sales_details
WHERE sls_sales != sls_quantity * sls_price
	OR sls_sales IS NULL OR sls_quantity IS NULL OR sls_price IS NULL
	OR sls_sales <= 0 OR sls_quantity <= 0 OR sls_price <= 0
ORDER BY sls_sales, sls_quantity, sls_price;
	--- in a scenario where I have bad data:
	--- #1 Data issue will be fixed directly in the source system
	--- #2 Data issue need to be fixed in the data warehouse
	--- The solution depends on what the experts say. Rules in this scenario:
	--- 1. If Sales is negative, 0 or NULL, derive it using Quantity * Price (ABS returns absolute value of a number)
	--- 2. If Price is 0 or NULL, calculate it using Sales / Quantity
	--- 3. If Price is negative, convert it into a positive value
